on:
  push:
  pull_request:
  workflow_dispatch:

  release:
    types: [created]

jobs:
  main:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: ada-actions/toolchain@ce2020
      - uses: alire-project/setup-alire@v1
        with:
          branch: "master"

      - run: alr build --validation

      - run: alr gnatprove -j0 --level=4

      - run: cd tests && alr gnatcov instrument --level=stmt --dump-trigger=atexit --projects ada_spark_workflow.gpr
      - run: cd tests && alr build -- --src-subdirs=gnatcov-instr --implicit-with=gnatcov_rts_full
      - run: cd tests && alr exec ./bin/tests
      - run: cd tests && alr gnatcov coverage --annotate=xcov --output-dir gnatcov_out --level=stmt --projects ada_spark_workflow.gpr *.srctrace

      - uses: alire-project/gnatcov-to-codecovio-action@main
        with:
          fail_ci_if_error: false
          verbose: true

      - name: Make Release
        if: (github.event_name == 'release')
        run: alr publish --skip-build ${{env.GITHUB_SERVER_URL}}/${{env.GITHUB_REPOSITORY}} ${{env.GITHUB_SHA}} # TODO: remove --skip-build when resources crate is published

      - name: Get Name of manifest
        if: (github.event_name == 'release')
        run: |
          MANIFEST_PATHNAME=$(ls alire/*.toml | head -n 1)
          MANIFEST_NAME=$(basename $MANIFEST_PATHNAME)
          echo ::set-env name=MANIFEST_NAME::${MANIFEST_NAME}
          echo ::set-env name=MANIFEST_PATHNAME::${MANIFEST_PATHNAME}

      - name: Upload release manifest
        if: (github.event_name == 'release')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ${{ env.MANIFEST_PATHNAME }}
          asset_name: ${{ env.MANIFEST_NAME }}
          asset_content_type: application/x-elf
